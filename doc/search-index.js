var N = null;var searchIndex = {};
searchIndex["bindoku"]={"doc":"","items":[],"paths":[]};
searchIndex["colored"]={"doc":"Coloring terminal so simple, you already know how to do it !","items":[[3,"ColoredString","colored","A string that may have color and/or style applied to it.",N,N],[4,"Color","","The 8 standard colors.",N,N],[13,"Black","","",0,N],[13,"Red","","",0,N],[13,"Green","","",0,N],[13,"Yellow","","",0,N],[13,"Blue","","",0,N],[13,"Magenta","","",0,N],[13,"Cyan","","",0,N],[13,"White","","",0,N],[13,"BrightBlack","","",0,N],[13,"BrightRed","","",0,N],[13,"BrightGreen","","",0,N],[13,"BrightYellow","","",0,N],[13,"BrightBlue","","",0,N],[13,"BrightMagenta","","",0,N],[13,"BrightCyan","","",0,N],[13,"BrightWhite","","",0,N],[11,"clone","","",0,[[["self"]],["color"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["color"]],["bool"]]],[11,"to_fg_str","","",0,[[["self"]],["str"]]],[11,"to_bg_str","","",0,[[["self"]],["str"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[0,"control","","A couple of functions to enable and disable coloring.",N,N],[3,"ShouldColorize","colored::control","",N,N],[3,"SHOULD_COLORIZE","","",N,N],[5,"set_override","","Use this to force colored to ignore the environment and always/never colorize See example/control.rs",N,[[["bool"]]]],[5,"unset_override","","Remove the manual override and let the environment decide if it's ok to colorize See example/control.rs",N,[[]]],[11,"deref","","",1,[[["self"]],["shouldcolorize"]]],[11,"initialize","","",1,[[["self"]]]],[11,"default","","",2,[[],["shouldcolorize"]]],[11,"from_env","","",2,[[],["self"]]],[11,"should_colorize","","",2,[[["self"]],["bool"]]],[11,"set_override","","",2,[[["self"],["bool"]]]],[11,"unset_override","","",2,[[["self"]]]],[8,"Colorize","colored","The trait that enables something to be given color.",N,N],[10,"black","","",3,[[["self"]],["coloredstring"]]],[10,"red","","",3,[[["self"]],["coloredstring"]]],[10,"green","","",3,[[["self"]],["coloredstring"]]],[10,"yellow","","",3,[[["self"]],["coloredstring"]]],[10,"blue","","",3,[[["self"]],["coloredstring"]]],[10,"magenta","","",3,[[["self"]],["coloredstring"]]],[10,"purple","","",3,[[["self"]],["coloredstring"]]],[10,"cyan","","",3,[[["self"]],["coloredstring"]]],[10,"white","","",3,[[["self"]],["coloredstring"]]],[10,"bright_black","","",3,[[["self"]],["coloredstring"]]],[10,"bright_red","","",3,[[["self"]],["coloredstring"]]],[10,"bright_green","","",3,[[["self"]],["coloredstring"]]],[10,"bright_yellow","","",3,[[["self"]],["coloredstring"]]],[10,"bright_blue","","",3,[[["self"]],["coloredstring"]]],[10,"bright_magenta","","",3,[[["self"]],["coloredstring"]]],[10,"bright_purple","","",3,[[["self"]],["coloredstring"]]],[10,"bright_cyan","","",3,[[["self"]],["coloredstring"]]],[10,"bright_white","","",3,[[["self"]],["coloredstring"]]],[10,"color","","",3,[[["self"],["s"]],["coloredstring"]]],[10,"on_black","","",3,[[["self"]],["coloredstring"]]],[10,"on_red","","",3,[[["self"]],["coloredstring"]]],[10,"on_green","","",3,[[["self"]],["coloredstring"]]],[10,"on_yellow","","",3,[[["self"]],["coloredstring"]]],[10,"on_blue","","",3,[[["self"]],["coloredstring"]]],[10,"on_magenta","","",3,[[["self"]],["coloredstring"]]],[10,"on_purple","","",3,[[["self"]],["coloredstring"]]],[10,"on_cyan","","",3,[[["self"]],["coloredstring"]]],[10,"on_white","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_black","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_red","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_green","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_yellow","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_blue","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_magenta","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_purple","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_cyan","","",3,[[["self"]],["coloredstring"]]],[10,"on_bright_white","","",3,[[["self"]],["coloredstring"]]],[10,"on_color","","",3,[[["self"],["s"]],["coloredstring"]]],[10,"clear","","",3,[[["self"]],["coloredstring"]]],[10,"normal","","",3,[[["self"]],["coloredstring"]]],[10,"bold","","",3,[[["self"]],["coloredstring"]]],[10,"dimmed","","",3,[[["self"]],["coloredstring"]]],[10,"italic","","",3,[[["self"]],["coloredstring"]]],[10,"underline","","",3,[[["self"]],["coloredstring"]]],[10,"blink","","",3,[[["self"]],["coloredstring"]]],[10,"reverse","","Historical name of `Colorize::reversed`. May be removed in a future version. Please use `Colorize::reversed` instead",3,[[["self"]],["coloredstring"]]],[10,"reversed","","This should be preferred to `Colorize::reverse`.",3,[[["self"]],["coloredstring"]]],[10,"hidden","","",3,[[["self"]],["coloredstring"]]],[10,"strikethrough","","",3,[[["self"]],["coloredstring"]]],[11,"clone","","",4,[[["self"]],["coloredstring"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["coloredstring"]],["bool"]]],[11,"ne","","",4,[[["self"],["coloredstring"]],["bool"]]],[11,"is_plain","","",4,[[["self"]],["bool"]]],[11,"default","","",4,[[],["self"]]],[11,"deref","","",4,[[["self"]],["str"]]],[11,"from","","",4,[[["str"]],["self"]]],[11,"black","","",4,[[["self"]],["coloredstring"]]],[11,"red","","",4,[[["self"]],["coloredstring"]]],[11,"green","","",4,[[["self"]],["coloredstring"]]],[11,"yellow","","",4,[[["self"]],["coloredstring"]]],[11,"blue","","",4,[[["self"]],["coloredstring"]]],[11,"magenta","","",4,[[["self"]],["coloredstring"]]],[11,"purple","","",4,[[["self"]],["coloredstring"]]],[11,"cyan","","",4,[[["self"]],["coloredstring"]]],[11,"white","","",4,[[["self"]],["coloredstring"]]],[11,"bright_black","","",4,[[["self"]],["coloredstring"]]],[11,"bright_red","","",4,[[["self"]],["coloredstring"]]],[11,"bright_green","","",4,[[["self"]],["coloredstring"]]],[11,"bright_yellow","","",4,[[["self"]],["coloredstring"]]],[11,"bright_blue","","",4,[[["self"]],["coloredstring"]]],[11,"bright_magenta","","",4,[[["self"]],["coloredstring"]]],[11,"bright_purple","","",4,[[["self"]],["coloredstring"]]],[11,"bright_cyan","","",4,[[["self"]],["coloredstring"]]],[11,"bright_white","","",4,[[["self"]],["coloredstring"]]],[11,"color","","",4,[[["self"],["s"]],["coloredstring"]]],[11,"on_black","","",4,[[["self"]],["coloredstring"]]],[11,"on_red","","",4,[[["self"]],["coloredstring"]]],[11,"on_green","","",4,[[["self"]],["coloredstring"]]],[11,"on_yellow","","",4,[[["self"]],["coloredstring"]]],[11,"on_blue","","",4,[[["self"]],["coloredstring"]]],[11,"on_magenta","","",4,[[["self"]],["coloredstring"]]],[11,"on_purple","","",4,[[["self"]],["coloredstring"]]],[11,"on_cyan","","",4,[[["self"]],["coloredstring"]]],[11,"on_white","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_black","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_red","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_green","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_yellow","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_blue","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_magenta","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_purple","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_cyan","","",4,[[["self"]],["coloredstring"]]],[11,"on_bright_white","","",4,[[["self"]],["coloredstring"]]],[11,"on_color","","",4,[[["self"],["s"]],["coloredstring"]]],[11,"clear","","",4,[[["self"]],["coloredstring"]]],[11,"normal","","",4,[[["self"]],["coloredstring"]]],[11,"bold","","",4,[[["self"]],["coloredstring"]]],[11,"dimmed","","",4,[[["self"]],["coloredstring"]]],[11,"italic","","",4,[[["self"]],["coloredstring"]]],[11,"underline","","",4,[[["self"]],["coloredstring"]]],[11,"blink","","",4,[[["self"]],["coloredstring"]]],[11,"reverse","","",4,[[["self"]],["coloredstring"]]],[11,"reversed","","",4,[[["self"]],["coloredstring"]]],[11,"hidden","","",4,[[["self"]],["coloredstring"]]],[11,"strikethrough","","",4,[[["self"]],["coloredstring"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Color"],[3,"SHOULD_COLORIZE"],[3,"ShouldColorize"],[8,"Colorize"],[3,"ColoredString"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libdoku"]={"doc":"","items":[[3,"Sudoku","libdoku","",N,N],[12,"cells","","",0,N],[3,"Rustdoku","","",N,N],[4,"SudokuErr","","",N,N],[13,"GrillSize","","",1,N],[13,"MultResult","","",1,N],[13,"ImpossibleGrill","","",1,N],[5,"recurse","","",N,[[["sudoku"]],["result",["sudoku","sudokuerr"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["sudoku"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","create a new sudoku with the vector grill. # Example",0,[[["vec",["option"]]],["result",["sudokuerr"]]]],[11,"replace","","replace a cell with the number 'nb' at index 'index'. # Example",0,[[["self"],["option",["u8"]],["u8"]]]],[11,"get_pos","","Get the posibility for all cells in the Sudoku. # Example",0,[[["self"]]]],[11,"inclusive","","resolv with inclusiv method.",0,[[["self"]],["bool"]]],[11,"exclusiv","","resolv with exclusiv method.",0,[[["self"]],["bool"]]],[11,"column","","this function will return the column at index 'index' # Example",0,[[["self"],["u8"]],["column"]]],[11,"row","","this function will return the row at index 'index' # Example",0,[[["self"],["u8"]],["row"]]],[11,"square","","this function will return the square  at index 'index' # Example",0,[[["self"],["u8"]],["square"]]],[11,"clone","","",2,[[["self"]],["rustdoku"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"new","","This is creating the rustdoku and give it # Example",2,[[["vec",["option"]]],["result",["sudokuerr"]]]],[11,"solve","","This is the entry of this library, here it launch the algorithm. # Example",2,[[["self"]],["result",["sudokuerr"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Sudoku"],[4,"SudokuErr"],[3,"Rustdoku"]]};
initSearch(searchIndex);
